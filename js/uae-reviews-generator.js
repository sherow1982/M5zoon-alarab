// ูุธุงู ุชูููุฏ ุงูุชููููุงุช ุงูุฅูุงุฑุงุชูุฉ ุงูุฐููุฉ
class UAEReviewsGenerator {
    constructor() {
        this.emiratiNames = [
            // ุฃุณูุงุก ุฑุฌุงููุฉ ุฅูุงุฑุงุชูุฉ
            'ุฃุญูุฏ ุงูููุตูุฑู', 'ูุญูุฏ ุงูููุจู', 'ุณุงูู ุงูุดุงูุณู', 'ุฎุงูุฏ ุงูุจููุดู', 'ุฑุงุดุฏ ุงููุนุจู',
            'ุนุจุฏุงููู ุงูุฒุนุงุจู', 'ุณุนูุฏ ุงููููุฑู', 'ููุตู ุงูุนุชูุจุฉ', 'ูุฌุฏ ุงููุฑุฑ', 'ุทุงุฑู ุงูุทุงูุฑ',
            'ุญูุฏุงู ุจู ุฑุงุดุฏ', 'ุฒุงูุฏ ุงูุดุฑูู', 'ูุงุฌุฏ ุงูููุงุฏู', 'ุฌุงุณู ุงูุญูุณูู', 'ุนูุฑ ุงูุญูุงุฏู',
            'ููุณู ุงููุทุฑูุดู', 'ูุงูู ุงูุณููุฏู', 'ุญุงุชู ุงูุธุงูุฑู', 'ุจุฏุฑ ุงูุฌุงุจุฑู', 'ุณูุทุงู ุงููุชุจู',
            
            // ุฃุณูุงุก ูุณุงุฆูุฉ ุฅูุงุฑุงุชูุฉ
            'ูุงุทูุฉ ุงููุนููู', 'ุนุงุฆุดุฉ ุงูุดุญู', 'ูุฑูู ุงูุจุฏูุงูู', 'ููุฑุง ุงูุทููุฌู', 'ุณุงุฑุฉ ุงููุจูุณู',
            'ุดูุง ุงููุฒุฑูุนู', 'ููุฏ ุงูุฑููุซู', 'ูุทููุฉ ุงูุดุฑูุงู', 'ุฃููุฑุฉ ุงูุญูุณูู', 'ุฑูุง ุงููุทูุน',
            'ุณูุงูุฉ ุงููุงุดูู', 'ุฅููุงู ุงูููุฏู', 'ุขููุฉ ุงูุนููุง', 'ุดูุฎุฉ ุงูุฑุงุดุฏ', 'ููุฒุฉ ุงูุจูุณููุท',
            'ูุฌูุงุก ุงูุญุฑุจู', 'ุฑููุฉ ุงูุฌููุจู', 'ุตููุฉ ุงูุฏุฑุนู', 'ุฎููุฉ ุงูุณุฑูุงู', 'ููุซุงุก ุงูุดุญู'
        ];

        this.reviewTemplates = {
            perfumes: [
                'ุนุทุฑ ุฑุงุฆุน ูุซุจุงุช ููุชุงุฒ! ูุฏูู ุงูุซุฑ ูู 8 ุณุงุนุงุช ๐น',
                'ูู ุฃุฌูู ุงูุนุทูุฑ ุงููู ุฌุฑุจุชูุงุ ุฑุงุฆุญุฉ ูุฎูุฉ ูุฑุงููุฉ ุฌุฏุงู โจ',
                'ุนุทุฑ ูููุฒ ูููุงุณุจ ุฌููุน ุงูููุงุณุจุงุชุ ุงูุตุญ ููู ุจููุฉ ๐',
                'ุซุจุงุช ุงูุนุทุฑ ููุง ุงุฑูุน! ุญุชู ุจุงูุตูู ุงูุงูุงุฑุงุชู ูุฏูู ุทููู ๐ฅ', 
                'ุนุทุฑ ุดุฑูู ุงุตูู ูุฑุงุฆุญุฉ ุชุฌููุ ุงุณุชููุชู ุณุฑูุน ูุงูุชุบููู ุฑุงูู ุฌุฏุงู ๐',
                'ูู ุงูุถู ุงูุนุทูุฑ ุงููุงุฎุฑุฉุ ุฑุงุฆุญุฉ ูููุฒุฉ ูุงูููุฉ ๐',
                'ุนุทุฑ ููุงุณุจ ุงูุฐูู ุงูุฎููุฌูุ ุซุจุงุช ุนุงูู ูุฑุงุฆุญุฉ ุชุนุฌุจ ุงููู ๐ฆ๐ช',
                'ุฌูุฏุฉ ููุชุงุฒุฉ ูุณุนุฑ ูุนูููุ ุงูุชูุตูู ูุงู ุณุฑูุน ูุฏุจู ๐',
                'ุนุทุฑ ุฑุงูู ุฌุฏุงูุ ุงุณุชุฎุฏูุชู ูู ุงูุนุฑุณ ููู ุงููุงุณ ุณุฃูุช ุนูู ๐',
                'ุฑูุญุฉ ูุฎูุฉ ูุซุจุงุช ูุฏูู ูุฃูุซุฑ ูู ููู ูุงููุ ุฑุงุงุงุงุฆุน! โญ',
                'ูู ุฃุญูู ุงูุนุทูุฑ ุงูุดุฑููุฉุ ููุตุญ ููู ููููุงุณุจุงุช ุงูุฎุงุตุฉ ๐',
                'ุฌูุฏุฉ ุนุงููุฉ ูุชุบููู ุฃูููุ ูุตู ุจุณุฑุนุฉ ูุฃุจูุธุจู ๐ฆ',
                'ุนุทุฑ ูููุฒ ููุบุงูุฉุ ุฑุงุฆุญุฉ ุซุงุจุชุฉ ููููุฒุฉ ููุดุฎุตูุฉ ุงููููุฉ ๐ช',
                'ุฑุงุฆุญุฉ ุนุทุฑุฉ ูุฌูููุฉุ ููุงุณุจ ุงูุฌู ุงูุฅูุงุฑุงุชู ุชูุงูุงู ๐ด'
            ],
            
            watches: [
                'ุณุงุนุฉ ุฑุงููุฉ ุฌุฏุงู ูุงูุฌูุฏุฉ ููุชุงุฒุฉุ ุชุณุชุงูู ูู ููุณ ๐',
                'ุชุตููู ุฃููู ูููุงุณุจ ููุทูุณ ุงูุฅูุงุฑุงุชูุ ููุงููุฉ ูููุงุก ููุชุงุฒุฉ ๐',
                'ุณุงุนุฉ ูุฎูุฉ ูุนูููุฉุ ุชูุงุณุจ ุงูุดุบู ูุงูููุงุณุจุงุช ๐',
                'ุฌูุฏุฉ ุงูุชุตููุน ุนุงููุฉ ุฌุฏุงูุ ุณุงุนุฉ ุชุฏูู ุณููู ุทูููุฉ โฐ',
                'ุชุตููู ุนุตุฑู ูุฃูููุ ููุชุช ุงูุชุจุงู ุงููู ูู ุงูููุชุจ ๐ผ',
                'ุณุงุนุฉ ุฑูุงุถูุฉ ููุชุงุฒุฉุ ููุงููุฉ ููุฎุฏูุด ูุงูุตุฏูุงุช ๐โโ๏ธ',
                'ุดุบู ูุฏูู ุฑุงูู ูุชูุงุตูู ุฏูููุฉุ ุชุณุชุญู ุงูุชูููู ุงูุนุงูู โญ',
                'ุณุงุนุฉ ููุงุณูููุฉ ุจุชุตููู ุนุตุฑูุ ููุงุณุจุฉ ูุฌููุน ุงูุฃููุงุช ๐',
                'ุงูุณุนุฑ ููุชุงุฒ ููุงุฑูุฉ ุจุงูุฌูุฏุฉุ ุงูุตุญ ูููุง ุจููุฉ ๐',
                'ูุตูุช ุจุชุบููู ูุงุฎุฑ ูุงูุญุงูุฉ ููุชุงุฒุฉุ ุฎุฏูุฉ ุชูุตูู ุณุฑูุนุฉ ๐ฆ',
                'ุณุงุนุฉ ูููุฒุฉ ููุฎูุฉุ ุชุนูุณ ุงูุฐูู ุงูุฑุงูู ๐ซ',
                'ูุฑูุญุฉ ูู ุงููุฏ ูุฎูููุฉ ุงููุฒูุ ููุงุณุจุฉ ููุงุณุชุฎุฏุงู ุงููููู ๐คฒ',
                'ุชุตููู ููุงุณุจ ุงูุดุจุงุจ ุงูุนุตุฑูุ ุฌูุฏุฉ ููุชุงุฒุฉ ุจุณุนุฑ ูุนููู ๐ฅ',
                'ุณุงุนุฉ ุฃูููุฉ ููุบุงูุฉุ ุญุตูุช ุนูู ุฅุนุฌุงุจ ุงูุฃุตุฏูุงุก ูุงูุนุงุฆูุฉ ๐จโ๐ฉโ๐งโ๐ฆ'
            ],

            gifts: [
                'ูุฏูุฉ ุฑุงููุฉ ููููุฒุฉุ ุนุฌุจุช ุงูุดุฎุต ุงููู ุฃูุฏูุชูุง ูู ูุซูุฑ ๐',
                'ุชุบููู ูุงุฎุฑ ูุฌูุฏุฉ ููุชุงุฒุฉุ ููุงุณุจุฉ ููููุงุณุจุงุช ุงูุฎุงุตุฉ โจ',
                'ูุฏูุฉ ุฃูููุฉ ูุนูููุฉุ ุชูุงุณุจ ุฌููุน ุงูุฃุฐูุงู ๐',
                'ุฌูุฏุฉ ุนุงููุฉ ูุณุนุฑ ูุนูููุ ุฎูุงุฑ ููุชุงุฒ ูููุฏุงูุง ๐',
                'ูุตูุช ูู ุงูููุช ุงููุญุฏุฏ ูุจุญุงูุฉ ููุชุงุฒุฉุ ุฎุฏูุฉ ุฑุงุฆุนุฉ ๐',
                'ูุฏูุฉ ูููุฒุฉ ูุฑุงููุฉุ ูุงูุช ุฅุนุฌุงุจ ูุจูุฑ ๐',
                'ุชุตููู ุฌููู ูุฌูุฏุฉ ูุงุฎุฑุฉุ ุชุณุชุญู ูู ูุฌูุฉ โญ',
                'ููุงุณุจุฉ ูุฌููุน ุงูููุงุณุจุงุชุ ูุฏูุฉ ูุง ุชูุณู ๐',
                'ุญุตูุช ุนูู ุฅุนุฌุงุจ ุงูุฌููุนุ ุงุฎุชูุงุฑ ูููู ๐',
                'ูุฏูุฉ ุฑุงููุฉ ุจุณุนุฑ ููุงุณุจุ ุงูุตุญ ูููุง ููุฌููุน ๐'
            ]
        };

        this.locations = [
            'ุฏุจู', 'ุฃุจูุธุจู', 'ุงูุดุงุฑูุฉ', 'ุนุฌูุงู', 'ุฃู ุงูููููู', 'ุฑุฃุณ ุงูุฎููุฉ', 'ุงููุฌูุฑุฉ',
            'ุงูุนูู', 'ุงูุฐูุฏ', 'ููุจุงุก', 'ุฎูุฑููุงู', 'ุฏุจุง ุงููุฌูุฑุฉ', 'ูุฏููุฉ ุฒุงูุฏ'
        ];

        this.timeExpressions = [
            'ูุจู ุฃุณุจูุน', 'ูุจู ุฃุณุจูุนูู', 'ูุจู 3 ุฃุณุงุจูุน', 'ูุจู ุดูุฑ', 'ูุจู ุดูุฑูู', 
            'ูุจู 3 ุฃุดูุฑ', 'ูุจู 4 ุฃุดูุฑ', 'ูุจู 5 ุฃุดูุฑ', 'ูุจู 6 ุฃุดูุฑ'
        ];
    }

    generateReviewsForProduct(productTitle, category = 'perfumes', count = 18) {
        const reviews = [];
        const usedNames = new Set();
        
        for (let i = 0; i < count; i++) {
            // ุงุฎุชูุงุฑ ุงุณู ูุฑูุฏ
            let name;
            do {
                name = this.emiratiNames[Math.floor(Math.random() * this.emiratiNames.length)];
            } while (usedNames.has(name) && usedNames.size < this.emiratiNames.length);
            usedNames.add(name);

            // ุชุญุฏูุฏ ุงูุชูููู (85% ุงุญุชูุงู 5 ูุฌููุ 15% ุงุญุชูุงู 4 ูุฌูู)
            const rating = Math.random() < 0.85 ? 5 : 4;
            
            // ุงุฎุชูุงุฑ ูุงูุจ ุงูุชูููู
            const templates = this.reviewTemplates[category] || this.reviewTemplates.perfumes;
            let reviewText = templates[Math.floor(Math.random() * templates.length)];
            
            // ุฅุถุงูุฉ ุชุฎุตูุต ููููุชุฌ ุฃุญูุงูุงู
            if (Math.random() < 0.3) {
                const productSpecific = this.generateProductSpecificComment(productTitle, category);
                reviewText = productSpecific + ' ' + reviewText;
            }

            // ุฅุถุงูุฉ ุงููููุน ุฃุญูุงูุงู
            if (Math.random() < 0.4) {
                const location = this.locations[Math.floor(Math.random() * this.locations.length)];
                reviewText += ` - ูู ${location}`;
            }

            // ุชุงุฑูุฎ ุนุดูุงุฆู ูู 2015 ุฅูู 2025
            const startDate = new Date('2015-01-01');
            const endDate = new Date('2025-12-31');
            const randomTime = startDate.getTime() + Math.random() * (endDate.getTime() - startDate.getTime());
            const reviewDate = new Date(randomTime);

            reviews.push({
                id: `review_${Date.now()}_${i}`,
                author: name,
                rating: rating,
                comment: reviewText,
                date: reviewDate,
                verified: Math.random() < 0.8, // 80% ุชููููุงุช ููุซูุฉ
                helpful: Math.floor(Math.random() * 25), // ุนุฏุฏ ุงูุฅุนุฌุงุจุงุช
                location: Math.random() < 0.5 ? this.locations[Math.floor(Math.random() * this.locations.length)] : null
            });
        }

        // ุชุฑุชูุจ ุงูุชููููุงุช ุญุณุจ ุงูุชุงุฑูุฎ (ุงูุฃุญุฏุซ ุฃููุงู)
        reviews.sort((a, b) => b.date - a.date);
        
        return reviews;
    }

    generateProductSpecificComment(productTitle, category) {
        const specificComments = {
            perfumes: [
                `ุนุทุฑ ${productTitle.split(' ')[0]} ุญูู ูุซูุฑ`,
                `ุฑูุญุฉ ${productTitle.split(' ')[0]} ุชุฌูู`,
                `${productTitle.split(' ')[0]} ูู ุฃุญูู ุงูุนุทูุฑ`,
                `ุฌุฑุจุช ${productTitle.split(' ')[0]} ูุนุฌุจูู ูุงูุฏ`
            ],
            watches: [
                `ุณุงุนุฉ ${productTitle.split(' ')[0]} ุชุญูุฉ`,
                `${productTitle.split(' ')[0]} ุณุงุนุฉ ุฑุงููุฉ`,
                `ุชุตููู ${productTitle.split(' ')[0]} ุญูู ูุซูุฑ`,
                `ุฌูุฏุฉ ${productTitle.split(' ')[0]} ููุชุงุฒุฉ`
            ],
            gifts: [
                `ูุฏูุฉ ${productTitle.split(' ')[0]} ูููุฒุฉ`,
                `${productTitle.split(' ')[0]} ุงุฎุชูุงุฑ ูููู`,
                `ุดูู ${productTitle.split(' ')[0]} ุฑุงูู ูุซูุฑ`
            ]
        };

        const comments = specificComments[category] || specificComments.perfumes;
        return comments[Math.floor(Math.random() * comments.length)];
    }

    formatTimeAgo(date) {
        const now = new Date();
        const diffTime = Math.abs(now - date);
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        
        if (diffDays < 7) {
            return `ูุจู ${diffDays} ${diffDays === 1 ? 'ููู' : 'ุฃูุงู'}`;
        } else if (diffDays < 30) {
            const weeks = Math.floor(diffDays / 7);
            return `ูุจู ${weeks} ${weeks === 1 ? 'ุฃุณุจูุน' : 'ุฃุณุงุจูุน'}`;
        } else if (diffDays < 365) {
            const months = Math.floor(diffDays / 30);
            return `ูุจู ${months} ${months === 1 ? 'ุดูุฑ' : 'ุฃุดูุฑ'}`;
        } else {
            const years = Math.floor(diffDays / 365);
            return `ูุจู ${years} ${years === 1 ? 'ุณูุฉ' : 'ุณููุงุช'}`;
        }
    }

    calculateAverageRating(reviews) {
        if (reviews.length === 0) return 0;
        const sum = reviews.reduce((acc, review) => acc + review.rating, 0);
        return (sum / reviews.length).toFixed(1);
    }

    renderReviewsHTML(reviews, productId) {
        const averageRating = this.calculateAverageRating(reviews);
        const totalReviews = reviews.length;
        
        let html = `
            <div class="product-reviews" id="reviews-${productId}">
                <div class="reviews-summary">
                    <div class="rating-overview">
                        <div class="average-rating">
                            <span class="rating-number">${averageRating}</span>
                            <div class="stars-display">
                                ${this.generateStarsHTML(parseFloat(averageRating))}
                            </div>
                            <span class="total-reviews">(${totalReviews} ุชูููู)</span>
                        </div>
                        <div class="rating-breakdown">
                            ${this.generateRatingBreakdown(reviews)}
                        </div>
                    </div>
                </div>
                
                <div class="reviews-list">
                    <div class="reviews-header">
                        <h4>๐ ุขุฑุงุก ุงูุนููุงุก</h4>
                        <div class="reviews-filter">
                            <select onchange="filterReviews('${productId}', this.value)">
                                <option value="all">ุฌููุน ุงูุชููููุงุช</option>
                                <option value="5">5 ูุฌูู</option>
                                <option value="4">4 ูุฌูู</option>
                                <option value="verified">ููุซู ููุท</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="reviews-items" id="reviews-items-${productId}">
                        ${reviews.slice(0, 5).map(review => this.renderSingleReview(review)).join('')}
                    </div>
                    
                    ${reviews.length > 5 ? `
                        <button class="show-more-reviews" onclick="showMoreReviews('${productId}')">
                            ุนุฑุถ ุงููุฒูุฏ ูู ุงูุชููููุงุช (${reviews.length - 5}+)
                        </button>
                    ` : ''}
                </div>
            </div>
        `;
        
        return html;
    }

    renderSingleReview(review) {
        return `
            <div class="review-item ${review.verified ? 'verified' : ''}" data-rating="${review.rating}">
                <div class="review-header">
                    <div class="reviewer-info">
                        <div class="reviewer-avatar">
                            ${review.author.charAt(0)}
                        </div>
                        <div class="reviewer-details">
                            <div class="reviewer-name">
                                ${review.author}
                                ${review.verified ? '<span class="verified-badge">โ ููุซู</span>' : ''}
                            </div>
                            <div class="review-meta">
                                <div class="review-rating">
                                    ${this.generateStarsHTML(review.rating)}
                                </div>
                                <span class="review-date">${this.formatTimeAgo(review.date)}</span>
                                ${review.location ? `<span class="review-location">๐ ${review.location}</span>` : ''}
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="review-content">
                    <p>${review.comment}</p>
                </div>
                
                <div class="review-actions">
                    <button class="helpful-btn" onclick="markHelpful('${review.id}')">
                        ๐ ูููุฏ (${review.helpful})
                    </button>
                    <button class="reply-btn" onclick="replyToReview('${review.id}')">
                        ๐ฌ ุฑุฏ
                    </button>
                </div>
            </div>
        `;
    }

    generateStarsHTML(rating) {
        let stars = '';
        const fullStars = Math.floor(rating);
        const hasHalfStar = rating % 1 !== 0;
        
        for (let i = 0; i < fullStars; i++) {
            stars += '<span class="star filled">โ</span>';
        }
        
        if (hasHalfStar) {
            stars += '<span class="star half">โ</span>';
        }
        
        const emptyStars = 5 - Math.ceil(rating);
        for (let i = 0; i < emptyStars; i++) {
            stars += '<span class="star empty">โ</span>';
        }
        
        return stars;
    }

    generateRatingBreakdown(reviews) {
        const breakdown = { 5: 0, 4: 0, 3: 0, 2: 0, 1: 0 };
        reviews.forEach(review => {
            breakdown[review.rating]++;
        });
        
        const total = reviews.length;
        let html = '';
        
        for (let i = 5; i >= 1; i--) {
            const count = breakdown[i];
            const percentage = total > 0 ? Math.round((count / total) * 100) : 0;
            
            html += `
                <div class="rating-bar">
                    <span class="rating-label">${i} ูุฌูู</span>
                    <div class="rating-progress">
                        <div class="rating-fill" style="width: ${percentage}%"></div>
                    </div>
                    <span class="rating-count">${count}</span>
                </div>
            `;
        }
        
        return html;
    }
}

// ุฅูุดุงุก ูุซูู ุนุงู ูู ุงููููุฏ
window.uaeReviewsGenerator = new UAEReviewsGenerator();

// ูุธุงุฆู ูุณุงุนุฏุฉ ุนุงูุฉ
window.filterReviews = function(productId, filterValue) {
    const reviewsContainer = document.getElementById(`reviews-items-${productId}`);
    const reviews = reviewsContainer.querySelectorAll('.review-item');
    
    reviews.forEach(review => {
        const rating = review.getAttribute('data-rating');
        const isVerified = review.classList.contains('verified');
        
        let show = false;
        
        switch(filterValue) {
            case 'all':
                show = true;
                break;
            case 'verified':
                show = isVerified;
                break;
            default:
                show = rating === filterValue;
                break;
        }
        
        review.style.display = show ? 'block' : 'none';
    });
};

window.showMoreReviews = function(productId) {
    // ุชูููุฐ ุนุฑุถ ุงููุฒูุฏ ูู ุงูุชููููุงุช
    console.log(`ุนุฑุถ ุงููุฒูุฏ ูู ุงูุชููููุงุช ููููุชุฌ: ${productId}`);
};

window.markHelpful = function(reviewId) {
    const button = document.querySelector(`button[onclick="markHelpful('${reviewId}')"]`);
    if (button) {
        const currentCount = parseInt(button.textContent.match(/\d+/)[0]);
        button.innerHTML = `๐ ูููุฏ (${currentCount + 1})`;
        button.style.color = '#25D366';
    }
};

window.replyToReview = function(reviewId) {
    alert('ุณูุชู ุฅุถุงูุฉ ุฎุงุตูุฉ ุงูุฑุฏ ุนูู ุงูุชููููุงุช ูุฑูุจุงู! ๐ฌ');
};

// ุชุทุจูู ุงูุชููููุงุช ุนูู ุฌููุน ุงูููุชุฌุงุช ุนูุฏ ุชุญููู ุงูุตูุญุฉ
document.addEventListener('DOMContentLoaded', function() {
    // ุงูุนุซูุฑ ุนูู ุฌููุน ุงูููุชุฌุงุช ูุฅุถุงูุฉ ุงูุชููููุงุช
    const productCards = document.querySelectorAll('.product-card, .product-item');
    
    productCards.forEach((card, index) => {
        const productTitle = card.querySelector('.product-title, .product-name, h3, h4')?.textContent?.trim();
        const productPrice = card.querySelector('.product-price, .price');
        
        if (productTitle && productPrice) {
            // ุชุญุฏูุฏ ููุน ุงูููุชุฌ
            let category = 'perfumes';
            if (productTitle.toLowerCase().includes('ุณุงุนุฉ') || productTitle.toLowerCase().includes('watch')) {
                category = 'watches';
            } else if (productTitle.toLowerCase().includes('ูุฏูุฉ') || productTitle.toLowerCase().includes('gift')) {
                category = 'gifts';
            }
            
            // ุชูููุฏ ุงูุชููููุงุช
            const reviews = window.uaeReviewsGenerator.generateReviewsForProduct(productTitle, category);
            
            // ุฅูุดุงุก HTML ููุชููููุงุช
            const reviewsHTML = window.uaeReviewsGenerator.renderReviewsHTML(reviews, `product-${index}`);
            
            // ุฅุถุงูุฉ ุงูุชููููุงุช ุจุนุฏ ุงูุณุนุฑ
            const reviewsContainer = document.createElement('div');
            reviewsContainer.innerHTML = reviewsHTML;
            
            // ุฅุฏุฑุงุฌ ุงูุชููููุงุช ุจุนุฏ ุงูุณุนุฑ
            productPrice.parentNode.insertBefore(reviewsContainer, productPrice.nextSibling);
        }
    });
});